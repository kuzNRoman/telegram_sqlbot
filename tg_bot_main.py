from config import token
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import InputFile
import aiogram.utils.markdown as fmt
from aiogram.dispatcher.filters import Text
import json

import re
import sys

bot = Bot(token=token)
dp = Dispatcher(bot)

# keyboard_main
imp_info_button = types.KeyboardButton("ü§ì –ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
cheatsheet_button = types.KeyboardButton("üìó –®–ø–∞—Ä–≥–∞–ª–∫–∞")
cases_button = types.KeyboardButton("üìô –ö–µ–π—Å—ã")
keyboard_main = types.ReplyKeyboardMarkup(resize_keyboard=True)
keyboard_main.add(cheatsheet_button)
keyboard_main.add(cases_button)
keyboard_main.add(imp_info_button)

# keyboard_info_imp
courses_button = types.KeyboardButton("üñ• –í–∏–¥–µ–æ-—É—Ä–æ–∫–∏ –∏ –∫—É—Ä—Å—ã")
trainers_button = types.KeyboardButton("üíª –¢—Ä–µ–Ω–∞–∂–µ—Ä—ã SQL")
back_button = types.KeyboardButton("–ù–∞–∑–∞–¥")
keyboard_info_imp = types.ReplyKeyboardMarkup(resize_keyboard=True)
keyboard_info_imp.add(courses_button)
keyboard_info_imp.add(trainers_button)
keyboard_info_imp.add(back_button)


@dp.message_handler(commands="start")
async def start(message: types.Message):
    await message.answer(
        "–î–æ–±—Ä—ã–π –¥–µ–Ω—å!\n–î–∞–Ω–Ω—ã–π –±–æ—Ç –ø—Ä–∏–∑–≤–∞–Ω –±–µ—Å–ø–ª–∞—Ç–Ω–æ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è—Ç—å –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ —É—Ä–æ–∫–∏ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö –∏ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π SQL.\n\n–í—ã –º–æ–∂–µ—Ç–µ —Å–∫–∞—á–∞—Ç—å <b>PDF —Ñ–∞–π–ª —Å –ø–æ–ª–Ω—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö SQL</b> - –¥–µ—Ç–∞–ª—å–Ω–æ —Ä–∞–∑–æ–±—Ä–∞–Ω—ã —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –∏—Ö –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –≤ MSSQL, MySQL –∏ Postgres (—É—á–∏—Ç—ã–≤–∞—è –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∫–∞–∂–¥–æ–π –±–∞–∑—ã), –Ω–∞–∂–∞–≤ –Ω–∞ <b>–∫–Ω–æ–ø–∫—É üìó –®–ø–∞—Ä–≥–∞–ª–∫–∞</b>.\n\n–¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ —Å–∫–∞—á–∞—Ç—å <b>PDF —Ñ–∞–π–ª —Å —Å–æ–±—Ä–∞–Ω–Ω—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –∏ –∑–∞–¥–∞–Ω–∏—è–º–∏ —Å —Ä–∞–∑–Ω—ã—Ö —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π –ø–æ SQL</b>, –Ω–∞–∂–∞–≤ <b>–∫–Ω–æ–ø–∫—É üìô –ö–µ–π—Å—ã</b>\n\n–õ–∏–±–æ –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–Ω–æ–ø–∫–æ–π –†–∞–∑–¥–µ–ª—ã –∏ –ø–æ–∏—Å–∫–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Ç–∞–º.",
        parse_mode="HTML",
        reply_markup=keyboard_main,
    )


@dp.message_handler(Text(equals="üìó –®–ø–∞—Ä–≥–∞–ª–∫–∞"))
async def tarifs(message: types.Message):
    report_file = open(f"Cheatsheet_SQL.pdf", "rb")
    await bot.send_document(
        message.from_user.id,
        report_file,
        caption="\n–í –ø—Ä–∏—Å–ª–∞–Ω–Ω–æ–º —Ñ–∞–π–ª–µüëÜ —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ–ª—å—à–µ–π —á–∞—Å—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–π SQL —Å —Ä–∞–∑–±–æ—Ä–æ–º —Å–ø–µ—Ü–∏—Ñ–∏–∫–∏ –∏—Ö –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≤ MSSQL, MySQL, Postgres.\n\n –ù–∞–¥–µ—é—Å—å, —ç—Ç–æ—Ç —Ñ–∞–π–ª –ø–æ–º–æ–∂–µ—Ç –í–∞–º –≤ –∏–∑—É—á–µ–Ω–∏–∏ —è–∑—ã–∫–∞ SQL –∏–ª–∏ –±—É–¥–µ—Ç —Å–ª—É–∂–∏—Ç—å –æ—Ç–ª–∏—á–Ω–æ–π '—à–ø–∞—Ä–≥–∞–ª–∫–æ–π' –¥–ª—è —É–∂–µ –ø—Ä–∞–∫—Ç–∏–∫—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–πüòâ",
        parse_mode="HTML",
        reply_markup=keyboard_main,
    )


@dp.message_handler(Text(equals="üìô –ö–µ–π—Å—ã"))
async def tarifs(message: types.Message):
    report_file = open(f"Cases_sql.pdf", "rb")
    await bot.send_document(
        message.from_user.id,
        report_file,
        caption="\n–í –ø—Ä–∏—Å–ª–∞–Ω–Ω–æ–º —Ñ–∞–π–ª–µüëÜ —Å–æ–¥–µ—Ä–∂–∞—Ç—Å—è –≤–æ–ø—Ä–æ—Å—ã —Å –æ—Ç–≤–µ—Ç–∞–º–∏ –Ω–∞ –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –º–Ω–æ–π –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ —Å–æ–±–µ—Å–æ–¥–≤–∞–Ω–∏—è –ø–æ SQL –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π –¥–∞–Ω–Ω—ã—Ö.\n\n–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—èüëç",
        parse_mode="HTML",
        reply_markup=keyboard_main,
    )


@dp.message_handler(Text(equals="ü§ì –ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"))
async def tarifs(message: types.Message):
    await message.answer(
        "–î–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —É—Ä–æ–∫–∏ –∏ –∫—É—Ä—Å—ã (–ø–ª–∞—Ç–Ω—ã–µ –∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ), —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ç—Ä–µ–Ω–∞–∂–µ—Ä—ã –ø–æ sql –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ!",
        parse_mode="HTML",
        reply_markup=keyboard_info_imp,
    )


@dp.message_handler(Text(equals="üñ• –í–∏–¥–µ–æ-—É—Ä–æ–∫–∏ –∏ –∫—É—Ä—Å—ã"))
async def tarifs(message: types.Message):
    await message.answer(
        "<b>–ü–æ–ª–µ–∑–Ω—ã–µ —É—Ä–æ–∫–∏ –∏ –∫—É—Ä—Å—ã:</b>\n–®–∫–æ–ª–∞ –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞ –Ø–Ω–¥–µ–∫—Å\nhttps://www.youtube.com/watch?v=LGwy0QmMvOE\n–ö—É—Ä—Å Stepik - –ù–∞—É—á–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ\nhttps://stepik.org/course/578/promo",
        parse_mode="HTML",
        reply_markup=keyboard_info_imp,
    )


@dp.message_handler(Text(equals="–ù–∞–∑–∞–¥"))
async def tarifs(message: types.Message):
    await message.answer(
        "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        parse_mode="HTML",
        reply_markup=keyboard_main,
    )


if __name__ == "__main__":
    executor.start_polling(dp)
